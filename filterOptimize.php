<?php	  	  function getAndFilterListings(){	// Print all of the values of the preferences	$reqMaxPrice = htmlspecialchars($_POST['pris']); 	$reqMaxAvgift = htmlspecialchars($_POST['avgift']);	$prefMaxPrice = (int)$_POST['slider_price'];	$prefMaxAvgift = (int)$_POST['slider_avgift']; 	echo "Pris: ",$reqMaxPrice," Avgift: ",$reqMaxAvgift," Pref Pris: ",$prefMaxPrice," Pref Avgift: ",$prefMaxAvgift,"<br>";		$reqRooms = htmlspecialchars($_POST['size-rooms']);	$prefRooms =  (int)$_POST['slider_rooms']; 	$reqSize = htmlspecialchars($_POST['size-square']);	$prefSize = (int)$_POST['slider_kvm'];	$reqYard = htmlspecialchars($_POST['size-yard']);	$prefYard = (int)$_POST['slider_yard'];	echo "Rum: ",$reqRooms," Storlek: ",$reqSize," Tomt: ",$reqYard,"Pref rum: ",$prefRooms," Pref storlek: ",$prefSize," Pref tomt ",$prefYard,"<br>";	 	$reqAge = htmlspecialchars($_POST['age']);	$prefAge = (int)$_POST['slider_age'];		$reqTransport = $_POST['transportmetod'];	$prefLocation = htmlspecialchars($_POST['slider_location']);	$location = htmlspecialchars($_POST['LongLat']);	echo "Ålder: ",$reqAge," Pref Ålder: ",$prefAge," Transport: ",$reqTransport," Plats: ",$location," Pref plats: ",$prefLocation,"<br>";		$reqTyp = htmlspecialchars($_POST['boTyp']);	echo "Bostadstyp: ",$reqTyp,"<br><br>";			// Get latlong for setting the map to the required starting location	setLocationToMap($location);			//$listings is an array with each entry being a JSON object	$listings = getListings($location);   		$json_string = json_encode($aListing, JSON_PRETTY_PRINT);	//echo $json_string;		///////////////////////////////////// FILTER ////////////////////////////////////////////////////////////////	$filteredListings = array();	foreach($listings as $listItem){		$objectType = $listItem->objectType;		$listPrice = $listItem->listPrice;		$listRooms = $listItem->rooms;		$listArea = $listItem->livingArea;				$listRent = $listItem->rent;		$listfloor = $listItem->floor;		$listYear = $listItem->constructionYear;		$listYard = $listItem->plotArea;		// filter non-allowed listing types		if($objectType == $reqTyp || ($reqTyp == Villa && ($objectType == 'Parhus' || $objectType == 'Radhus'))){			// Filter listings without list price or house area			if(!is_null($listArea) && !is_null($listPrice)){				echo $objectType."<br>";				echo "Pris:".$listPrice."<br>";				echo "Rum: ".$listRooms."<br>";				echo "Area: ".$listArea."<br>";				echo "Hyra: ".$listRent."<br>";				echo "Våning: ".$listfloor."<br>"; // Is integer, null when no value				//echo gettype($listfloor)."<br>";				//echo is_null($listfloor)."<br>";				echo "År: ".$listYear."<br>";				echo "Trädgård: ".$listYard."<br><br>";				// Add item to array				$filteredListings[] = $listItem;			}		}			}		//$aListing = $listings[0];	// Get all of the important features 	/*echo "<br>";echo "<br>";	echo $aListing->location->address->streetAddress;	echo "<br>";	echo $aListing->location->region->municipalityName;	echo "<br>";	echo $aListing->booliId;	echo "<br>";	echo $aListing->listPrice;	echo "<br>";	echo $aListing->source->url;	echo "<br>";	echo $aListing->location->position->latitude;	echo " ";	echo $aListing->location->position->longitude;	echo "<br>";	echo $aListing->objectType;	echo "<br>";	echo $aListing->rooms;	echo "<br>";	echo $aListing->livingArea;	echo "<br>";	echo $aListing->rent;	echo "<br>";	echo $aListing->floor;	echo "<br>";	echo $aListing->constructionYear;	echo "<br>";	echo $aListing->url;	echo "<br>";	echo $aListing->plotArea;	*/	 //var_dump($listings); //Will display the structure of data				// Build the arrays for finding travel time	$nListingsToKeep = 20;	$opt_listings = array_slice($filteredListings, 0, $nListingsToKeep);	$transit = True;	$listings_travel_time = getTravelTime($location,$opt_listings,$transit,$reqTransport);		return $listings_travel_time;	  }	  	  	  	  ////////////////////// GET TRAVEL TIMES ///////////////////////////////////////////////////////////////////////////function getTravelTime($origin,$listings,$transit,$reqTransport){// Build url for HTTP$url ="https://maps.googleapis.com/maps/api/distancematrix/json?origins=";	foreach($listings as $listing){	$url = $url . $listing->location->position->latitude . ",";	$url = $url . $listing->location->position->longitude . "|";}$url = rtrim( $url, "|");$origin = str_replace(array(" ","(",")"), "", $origin);$arr = explode(",", $origin, 2);echo "<script>var destinationLatLong = {lat: ".$arr[0].", lng: ".$arr[1]."};</script>";$url = $url . "&destinations=" . $origin;$url = $url . "&mode=";if($reqTransport == "bil"){	$url = $url . "driving";}elseif($reqTransport == "lokaltrafik"){	$url = $url . "transit";}elseif($reqTransport == "cykla"){	$url = $url . "bicycling";}else{	$url = $url . "walking";}$url = $url . "&key=AIzaSyAA99PM_Xfqfhc8KTHSF3LwO6iXMGx0TrM";echo "<script type='text/javascript'>alert('$url');</script>";//$url="https://maps.googleapis.com/maps/api/distancematrix/json?origins=Vancouver+BC|Seattle&destinations=San+Francisco|Victoria+BC&key=AIzaSyAA99PM_Xfqfhc8KTHSF3LwO6iXMGx0TrM";$curl = curl_init($url);	  curl_setopt_array($curl, array(	CURLOPT_RETURNTRANSFER => true));	 	  // $response is a JSON string$response = curl_exec($curl); 	  $httpCode = curl_getinfo($curl, CURLINFO_HTTP_CODE);	  curl_close($curl);if ($httpCode != 200) {	/*echo "<script type='text/javascript'>alert('fail');</script>";*/}else{	/*echo "<script type='text/javascript'>alert('succses');</script>";*/}// $result is a JSON object  $result = json_decode($response);//$stat = $result->status;$rows = $result->rows;// Add travel times to listings array$index = 0;foreach($listings as $listing){	$row = $rows[$index];	$elements = $row->elements;	$element = $elements[0];	$travel_time = $element->duration->value;	$travel_distance = $element->distance->value;	$travel_time = round($travel_time/60);	$listing->travel_time = $travel_time;	$listing->distance = $travel_distance;	$index = $index + 1;}return $listings; }?>