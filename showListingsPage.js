var map;var marker;var initLat;var initLong;var zoomLevel;var markerArray;		//Function for removing a div and removing marker from map 				function removeDiv(idString) {			// Remove div from the DOM			var elem = document.getElementById(idString);			elem.parentNode.removeChild(elem);			// Get the marker for given listing and remove it from the map			stringListRank = idString.replace(/\D/g,'');			listIndex = Number(stringListRank)-1;			listingMarker = markerArray[listIndex];			listingMarker.setMap(null);		}				function startBounce(arrayIndex){			listingMarker = markerArray[arrayIndex];			listingMarker.setAnimation(google.maps.Animation.BOUNCE);		}				function endBounce(arrayIndex){			listingMarker = markerArray[arrayIndex];			listingMarker.setAnimation(null);		}				// Adds listener which listens for click in map		function addListenerToMap() {						google.maps.event.addListener(map,'click', function(e) {				// Set the hidden input field to the longitude and latitude 				 var elem = document.getElementById("pos");				elem.value = e.latLng;								//If map has not been clicked before, add a marker				if (marker == null){				placeMarker(e.latLng, map);								 //Else change position of the marker			  } else{				  				  marker.setPosition(e.latLng);			  }	 			  });		  }				//Add a marker to the map		function placeMarker(latLng, map) {  			    marker = new google.maps.Marker({				position: latLng,				map: map,  				});			}					// Initializes the map		function initMap() {		  map = new google.maps.Map(document.getElementById('map'), {			zoom: zoomLevel,			center: {lat: initLat, lng: initLong},			mapTypeId: google.maps.MapTypeId.ROADMAP		  });		           map.data.addListener('mouseout', function(event) {          map.data.revertStyle();        });		        var input = document.getElementById('pac-input');        var searchBox = new google.maps.places.SearchBox(input);        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);				map.addListener('bounds_changed', function() {          searchBox.setBounds(map.getBounds());        });        var markers = [];           searchBox.addListener('places_changed', function() {          var places = searchBox.getPlaces();          if (places.length == 0) {            return;          }             markers.forEach(function(marker) {            marker.setMap(null);          });          markers = [];          var bounds = new google.maps.LatLngBounds();          places.forEach(function(place) {            var icon = {              url: place.icon,              size: new google.maps.Size(71, 71),              origin: new google.maps.Point(0, 0),              anchor: new google.maps.Point(17, 34),              scaledSize: new google.maps.Size(25, 25)            };            markers.push(new google.maps.Marker({              map: map,              icon: icon,              title: place.name,              position: place.geometry.location            }));            if (place.geometry.viewport) {              bounds.union(place.geometry.viewport);            } else {              bounds.extend(place.geometry.location);            }          });          map.fitBounds(bounds);        });				// Set up markers for all relevant listings		markerArray = [];		for (i = 0; i < latLangArray.length; i++){			markerArray[i] = new google.maps.Marker({				position: latLangArray[i],				map: map,  				});						}		}